# Hver plade har 3 rækker med hver 9 kolonner. #
set $width 9
set $height 3

let board_is = seq 0 (* $width $height) in
all {
# Der benyttes 15 forskellige tal mellem 1 og 90. #
== (sum (map (\i ->
      and (> [$vs i] 0)
          (all (map (\j -> or (and (== [$xs j] [$xs i]) (== [$ys j] [$ys i]))
                              (not (== [$vs j] [$vs i])))
                    board_is)))
         board_is)) 15,
all (map (\i -> and (>= [$vs i] 0) (<= [$vs i] 90)) board_is)
,

# Tallene fordeles således at der er mindst ét tal i hver kolonne og præcis 5 #
# i hver række. #
and (all (map (\x1 -> any (map (\i -> and (== [$xs i] x1) (> [$vs i] 0)) board_is))
         (seq 0 $width)))
    (all (map (\y1 -> == (sum (map (\i -> and (== [$ys i] y1) (> [$vs i] 0)) board_is)) 5)
              (seq 0 $height)))
,

# Første kolonne indholder tallene fra 1 t.o.m. 9, anden kolonne 10-19, tredie #
# 20-29 osv.; 9. kolonne indeholder tallene fra 80 t.o.m. 90. #
all (map (\i -> or (== 0 [$vs i])
                   (or (or (and (== [$xs i] 0)
                                (and (>= [$vs i] 1)
                                     (<= [$vs i] 9)))
                           (and (== [$xs i] 8)
                                (and (>= [$vs i] 80)
                                     (<= [$vs i] 90))))
                       (and (>= [$vs i] (* 10 [$xs i]))
                            (<= [$vs i] (+ (* 10 [$xs i]) 9)))))
     board_is)
,

# I hver kolonne placeres tallene i stigende orden ovenfra og ned. #
all (map (\x1 -> let v0 = [$vs x1] in
                 let v1 = [$vs (+ x1 $width)] in
                 let v2 = [$vs (+ x1 (* 2 $width))] in
                 and (or (== 0 v1) (<= v0 v1))
                     (or (== 0 v2) (<= v1 v2)))
         (seq 0 $width))
}
